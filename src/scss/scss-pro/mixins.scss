/* 
----------------------------------------------------------------------
   ! IMPORT
----------------------------------------------------------------------
*/ 

@use "sass:list";
@use "sass:math";






/* 
----------------------------------------------------------------------
   ! text elements
----------------------------------------------------------------------
*/
@mixin uiTextElement (
   $margin: 0,
   $padding: 0,
   $fontFamily: inherit,
   $fontSize: 20px,
   $fontWeight: 500,
   $lineHeight: 100%,
   $color: $light,
   $textAlign: left,
   $textTransform: none,
   $maxWidth: none
) {
   margin: $margin;
   padding: $padding;
   font-family: $fontFamily;
   font-size: $fontSize;
   font-weight: $fontWeight;
   line-height: $lineHeight;
   color: $color;
   text-align: $textAlign;
   text-transform: $textTransform;
   max-width: $maxWidth;
}






/* 
----------------------------------------------------------------------
   ! button
----------------------------------------------------------------------
*/
@mixin button (
   $margin: 0,
   $padding: 12px 35px,
   $fontFamily: $Proxima,
   $fontSize: 18px,
   $fontWeight: 600,
   $lineHeight: 121%,
   $color: $light,
   $textTransform: uppercase,
   $adaptiveWidth: false,
   $minHeight: auto,
   $width: auto,
   $height: auto,
   $maxWidth: none,
   $shadow: none, // drop-shadow(0px 4px 14px rgba(0, 0, 0, 0.16))
   $background: transparent,
   $border: 2px solid $decoration,
   $borderRadius: 28px,
) {
   margin: $margin;
   padding: $padding;
   font-family: $fontFamily;
   font-size: $fontSize;
   font-weight: $fontWeight;
   line-height: $lineHeight;
   display: flex;
   align-items: center;
   justify-content: center;
   text-align: center;
   text-transform: $textTransform;
   border-radius: $borderRadius;
   border: none;
   position: relative;
   overflow: hidden;
   filter: $shadow;
   background: $background;
   width: $width;
   height: $height;
   transition: all 0.2s ease-out;
   span, svg {
      position: relative;
      color: $color;
      z-index: 1;
      transition: all 0.4s ease-out;
   }
   &:before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: transparent;
      border: $border;
      z-index: 1;
      border-radius: $borderRadius;
   }
   &::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: $decoration;
      border-radius: $borderRadius;
      z-index: 0;
      animation: buttonHoverAnimationRev 0.4s ease-out forwards;
   }
   &:active {
      animation: onclick 0.2s ease-out forwards;
   }
   &:hover {
      background-position: 100%;
      span {
         color: $dark;
      }
      &::after {
         animation: buttonHoverAnimation 0.4s ease-out forwards;
         border-color: $decoration
      }
      
   }

   @if $adaptiveWidth == true {
      min-height: $minHeight;
      max-width: $maxWidth;
      width: 100%;
   } 
}

// colored button hover animation
@keyframes buttonHoverAnimation {
   0% { left: -100%; }
   100% { left: 0; }
}
@keyframes buttonHoverAnimationRev {
   0% { left: 0; }
   100% { left: 100%; }
}

.ui-button {
   @include button();
}






/* 
----------------------------------------------------------------------
   ! animate class scroll
----------------------------------------------------------------------
*/
@mixin scrollAnimate (
   $transform: translate3d(0, 30px, 0),
   $allDelay: 0s,
   $animateShowDelay: 0s,
   $transition: all 0.5s ease-in-out $allDelay,
) {
   opacity: 0;
   visibility: hidden;
   transform: $transform;
   transition: $transition;
   &.animate-show {
      opacity: 1;
      visibility: visible;
      transform: none;
      transition-delay: $animateShowDelay;
   }
}







/* 
----------------------------------------------------------------------
   ! container & container-fluid
----------------------------------------------------------------------
*/

@mixin container (
   $maxWidth: 1920px, 
   $padding: 0 15px, 
   $margin: 0 auto,
   $flex: false,
   ) {
      margin: $margin;
      padding: $padding;
      max-width: $maxWidth;
      width: 100%;
      position: relative;
      z-index: 1;
      @if $flex {
         display: flex;
         align-items: center;
         justify-content: space-between;
      }
}
.ui-container {
   @include container
}










/* 
----------------------------------------------------------------------
   ! input
----------------------------------------------------------------------
*/
@mixin input (
   $padding: 10px 0,
   $fontFamily: $Proxima,
   $fontSize: 16px,
   $fontWeight: 300,
   $lineHeight: 20px,
   $color: $light,
   $placeholder: $too_low_light,
   $background: transparent,
   $border: 1px solid $too_low_light,
   $borderRadius: 0,
   $maxWidth: 100%,
   $minHeight: inherit,
   $height: inherit,
   $isTextarea: false,
   $minHeightTextarea: 50px
) {
   padding: $padding;
   font-family: $fontFamily;
   font-size: $fontSize;
   font-weight: $fontWeight;
   line-height: $lineHeight;
   color: $color;
   background: $background;
   border-bottom: $border;
   border-radius: $borderRadius;
   width: 100%;
   max-width: $maxWidth;
   min-height: $minHeight;
   height: $height;
   position: relative;
   transition: all 0.3s ease-out;
   &:focus {
      border-bottom: 1px solid $decoration;
   }
   @if $isTextarea {
      min-height: $minHeightTextarea
   }
   &::-webkit-input-placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */
      color: $placeholder;
      opacity: 1; /* Firefox */
   }

   &:-moz-placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */
      color: $placeholder;
      opacity: 1; /* Firefox */
   }

   &::-moz-placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */
      color: $placeholder;
      opacity: 1; /* Firefox */
   }

   &:-ms-input-placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */
      color: $placeholder;
      opacity: 1; /* Firefox */
   }

   &::-ms-input-placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */
      color: $placeholder;
      opacity: 1; /* Firefox */
   }

   &::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */
      color: $placeholder;
      opacity: 1; /* Firefox */
   }
   
   &:-ms-input-placeholder { /* Internet Explorer 10-11 */
      color: $placeholder;
   }
   
   &::-ms-input-placeholder { /* Microsoft Edge */
      color: $placeholder;
   }
}

input {
   @include input;
}

textarea {
   @include input($isTextarea: true)
}











/* 
----------------------------------------------------------------------
   ! media queries
----------------------------------------------------------------------
*/
@mixin media($bpName, $bp) {
   @media all and ($bpName: $bp) {
      @content;
   }
};


@mixin mediaW1200() {
   @media all and (max-width: 1200px) {
      @content;
   }
};

@mixin mediaW700() {
   @media all and (max-width: 700px) {
      @content;
   }
};

@mixin mediaW320() {
   @media all and (max-width: 320px) {
      @content;
   }
}



@import './extends';
@import './functions';